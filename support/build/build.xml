<?xml version="1.0" encoding="utf-8"?>
<project basedir="." default="build" name="Preside CI">
	<property file="build.properties" />

	<property name="test.project" value="preside-ci" />
	<property name="work.dir" value="/tmp/work" />
	<property name="build.dir" value="" />
	<property name="server.name" value="localhost"/>
	<property name="server.port" value="8888"/>
	<property name="stop.port" value="8887"/>
	<property name="output.dir" value="./results"/>
	<property name="download.dir" value="./downloads"/>
	<property name="artifacts.dir" value="./artifacts" />
	<property name="build.number.file" value="${artifacts.dir}/build.number" />

	<property name="railo40.remote.url" value="http://cfml-ci.s3.amazonaws.com/railo-express-4.0.4.001-nojre.tar.gz" />
	<property name="railo41.remote.url" value="http://cfml-ci.s3.amazonaws.com/railo-express-4.1.2.005-nojre.tar.gz" />
	<property name="railo42beta.remote.url" value="http://cfml-ci.s3.amazonaws.com/railo-express-4.2.0.000-nojre.tar.gz" />

	<property name="source" value="remote" />

	<property name="railo40.helper" value="railo" />
	<property name="railo41.helper" value="railo" />
	<property name="railo41-osx.helper" value="railo" />
	<property name="railo42beta.helper" value="railo" />

	<macrodef name="propertycopy">
		<attribute name="name"/>
		<attribute name="from"/>
		<sequential>
			<property name="@{name}" value="${@{from}}"/>
		</sequential>
	</macrodef>

	<path id="cp">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="cp" />

	<target name="build" depends="setupartifactsdir,setupoutputdir,install-preside-deps,setupreleaselabel">
		<zip destfile="${artifacts.dir}/${release.name}/PresideCMS.zip">
			<zipfileset dir="../../" prefix="preside">
				<exclude name="support/**"/>
			</zipfileset>
		</zip>
	</target>

	<target name="install-preside-deps" depends="clean-preside-deps,installcoldbox,installcfstatic,installckeditor">
	</target>

	<target name="clean-preside-deps">
		<delete dir="${coldbox.installdir}" failonerror="false" />
		<delete dir="${cfstatic.installdir}" failonerror="false" />
		<delete dir="${ckeditor.installdir}" failonerror="false" />
	</target>

	<target name="install-ci-deps" depends="setupTestRunnerEnvironment">
		<exec executable="/bin/bash" failonerror="true" outputproperty="output.log">
			<env key="WORK_DIR" value="${work.dir}" />
			<env key="BUILD_DIR" value="${build.dir}" />
			<env key="PLATFORM_URL" value="${platform.url}" />
			<env key="SERVER_PORT" value="${server.port}" />
			<env key="STOP_PORT" value="${stop.port}" />
			<arg line="scripts/ci-helper-${platform.helper}.sh install ${test.project}"/>
		</exec>
	</target>

	<target name="setup-railo-settings">
		<mkdir dir="${work.dir}/railo" />
		<mkdir dir="${work.dir}/railo/webapps" />
		<mkdir dir="${work.dir}/railo/webapps/www" />
		<mkdir dir="${work.dir}/railo/webapps/www/WEB-INF" />
		<mkdir dir="${work.dir}/railo/webapps/www/WEB-INF/railo" />
		<copy file="railo-web.xml.cfm" todir="${work.dir}/railo/webapps/www/WEB-INF/railo" />
	</target>

	<target name="start-server" depends="setup-railo-settings">
		<exec executable="/bin/bash" spawn="false" failonerror="true" outputproperty="output.log">
			<env key="WORK_DIR" value="${work.dir}" />
			<env key="BUILD_DIR" value="${build.dir}" />
			<env key="SERVER_PORT" value="${server.port}" />
			<arg line="scripts/ci-helper-${platform.helper}.sh start"/>
		</exec>
	</target>

	<target name="stop-server">
		<exec executable="/bin/bash" spawn="false" failonerror="true" outputproperty="output.log">
			<env key="WORK_DIR" value="${work.dir}" />
			<env key="BUILD_DIR" value="${build.dir}" />
			<env key="SERVER_PORT" value="${server.port}" />
			<arg line="scripts/ci-helper-${platform.helper}.sh stop"/>
		</exec>
	</target>

	<target name="test-ci" depends="setupTestRunnerEnvironment,setupoutputdir,installcoldbox,installcfstatic,start-server,test,stop-server">
		<property file="${output.dir}/testbox.properties" />
		<fail if="testbox.failed" message="At least one test failure!" />
	</target>

	<target name="setupoutputdir">
		<delete dir="${output.dir}"/>
		<mkdir dir="${output.dir}"/>
	</target>
	<target name="setupartifactsdir">
		<delete dir="${artifacts.dir}"/>
		<mkdir dir="${artifacts.dir}"/>
	</target>

	<target name="test">
		<get dest="${output.dir}/results.txt" src="http://${server.name}:${server.port}/${test.project}/support/build/test-suite-runner.cfm" verbose="true" />
    	<concat><path path="${output.dir}/output.txt" /></concat>
	</target>

	<target name="setupTestRunnerEnvironment">
		<fail unless="platform" message="Platform is not set" />
		<fail unless="${platform}.${source}.url">Unkown platform ${platform} for source ${source}.

Valid values are:
 railo40
 railo41
 railo41-osx
 railo42beta
		</fail>
		<propertycopy name="platform.url" from="${platform}.${source}.url" />
		<propertycopy name="platform.helper" from="${platform}.helper" />
	</target>

	<target name="installcoldbox">
		<mkdir dir="${download.dir}" />
		<if>
			<available file="${download.dir}/${coldbox.tmp.file}" />
			<then></then>
			<else>
				<get src="${coldbox.zip}" dest="${download.dir}/${coldbox.tmp.file}" />
			</else>
		</if>
		<unzip src="${download.dir}/${coldbox.tmp.file}" dest="${coldbox.installdir}">
			<mapper>
        		<globmapper from="${coldbox.zipsubdir}/*" to="*"/>
    		</mapper>
    	</unzip>
    	<copy file="testboxpatch/UnitRunner.cfc" todir="${coldbox.installdir}/system/testing/runners" />
	</target>

	<target name="installcfstatic">
		<mkdir dir="${download.dir}" />
		<if>
			<available file="${download.dir}/${cfstatic.tmp.file}" />
			<then></then>
			<else>
				<get src="${cfstatic.zip}" dest="${download.dir}/${cfstatic.tmp.file}" />
			</else>
		</if>
		<unzip src="${download.dir}/${cfstatic.tmp.file}" dest="${cfstatic.installdir}">
			<mapper>
        		<globmapper from="${cfstatic.zipsubdir}/*" to="*"/>
    		</mapper>
    	</unzip>
	</target>

	<target name="installckeditor">
		<mkdir dir="${download.dir}" />
		<if>
			<available file="${download.dir}/${ckeditor.tmp.file}" />
			<then></then>
			<else>
				<get src="${ckeditor.zip}" dest="${download.dir}/${ckeditor.tmp.file}" />
			</else>
		</if>
		<unzip src="${download.dir}/${ckeditor.tmp.file}" dest="${ckeditor.installdir}">
			<mapper>
				<globmapper from="${ckeditor.zipsubdir}/*" to="*"/>
			</mapper>
		</unzip>
	</target>

	<target name="setupreleaselabel">
		<property name="branch" value="develop" />
		<property name="tag" value="" />

		<if>
			<equals arg1="${tag}" arg2="" />
			<then>
				<switch value="${branch}">
					<case value="master">
						<property name="release.name" value="stable" />
					</case>
					<case value="develop">
						<property name="release.name" value="bleeding-edge" />
					</case>
					<default>
						<property name="release.name" value="${branch}" />
					</default>
				</switch>
			</then>
			<else>
				<property name="release.name" value="${tag}" />
			</else>
		</if>
	</target>

</project>