<?xml version="1.0" encoding="utf-8"?>
<project basedir="." default="test" name="Preside CI">

	<property file="build.properties" />

	<property name="test.project" value="preside-ci" />
	<property name="work.dir" value="/tmp/work" />
	<property name="build.dir" value="" />

	<property name="railo40.remote.url" value="http://cfml-ci.s3.amazonaws.com/railo-express-4.0.4.001-nojre.tar.gz" />
	<property name="railo41.remote.url" value="http://cfml-ci.s3.amazonaws.com/railo-express-4.1.2.005-nojre.tar.gz" />
	<property name="railo42beta.remote.url" value="http://cfml-ci.s3.amazonaws.com/railo-express-4.2.0.000-nojre.tar.gz" />

	<property name="source" value="remote" />

	<property name="railo40.helper" value="railo" />
	<property name="railo41.helper" value="railo" />
	<property name="railo41-osx.helper" value="railo" />
	<property name="railo42beta.helper" value="railo" />

	<fail unless="platform" message="Platform is not set" />
	<fail unless="${platform}.${source}.url">Unkown platform ${platform} for source ${source}.

Valid values are:
 railo40
 railo41
 railo41-osx
 railo42beta
	</fail>

	<macrodef name="propertycopy">
		<attribute name="name"/>
		<attribute name="from"/>
		<sequential>
			<property name="@{name}" value="${@{from}}"/>
		</sequential>
	</macrodef>

	<propertycopy name="platform.url" from="${platform}.${source}.url" />
	<propertycopy name="platform.helper" from="${platform}.helper" />

	<!-- General Properties -->
	<property name="server.name" value="localhost"/>
	<property name="server.port" value="8888"/>
	<property name="stop.port" value="8887"/>
	<property name="output.dir" value="results"/>

	<target name="install-ci-deps">
		<exec executable="/bin/bash" failonerror="true" outputproperty="output.log">
			<env key="WORK_DIR" value="${work.dir}" />
			<env key="BUILD_DIR" value="${build.dir}" />
			<env key="PLATFORM_URL" value="${platform.url}" />
			<env key="SERVER_PORT" value="${server.port}" />
			<env key="STOP_PORT" value="${stop.port}" />
			<arg line="scripts/ci-helper-${platform.helper}.sh install ${test.project}"/>
		</exec>
	</target>

	<target name="start-server">
		<exec executable="/bin/bash" spawn="false" failonerror="true" outputproperty="output.log">
			<env key="WORK_DIR" value="${work.dir}" />
			<env key="BUILD_DIR" value="${build.dir}" />
			<env key="SERVER_PORT" value="${server.port}" />
			<arg line="scripts/ci-helper-${platform.helper}.sh start"/>
		</exec>
	</target>

	<target name="stop-server">
		<exec executable="/bin/bash" spawn="false" failonerror="true" outputproperty="output.log">
			<env key="WORK_DIR" value="${work.dir}" />
			<env key="BUILD_DIR" value="${build.dir}" />
			<env key="SERVER_PORT" value="${server.port}" />
			<arg line="scripts/ci-helper-${platform.helper}.sh stop"/>
		</exec>
	</target>

	<target name="test-ci" depends="setupoutputdir,installcoldbox,installcfstatic,start-server,test,stop-server">
		<property file="${output.dir}/testbox.properties" />
		<fail if="testbox.failed" message="At least one test failure!" />
	</target>

	<target name="setupoutputdir">
		<delete dir="${output.dir}"/>
		<mkdir dir="${output.dir}"/>
	</target>

	<target name="test">
		<get dest="${output.dir}/results.txt" src="http://${server.name}:${server.port}/${test.project}/support/build/ci/test-suite-runner.cfm" verbose="true" />
    	<concat><path path="${output.dir}/output.txt" /></concat>
	</target>

	<target name="installcoldbox">
		<get src="${coldbox.zip}" dest="${output.dir}/coldbox.zip" />
		<unzip src="${output.dir}/coldbox.zip" dest="${coldbox.installdir}">
			<mapper>
        		<globmapper from="${coldbox.zipsubdir}/*" to="*"/>
    		</mapper>
    	</unzip>
	</target>

	<target name="installcfstatic">
		<get src="${cfstatic.zip}" dest="${output.dir}/cfstatic.zip" />
		<unzip src="${output.dir}/cfstatic.zip" dest="${cfstatic.installdir}">
			<mapper>
        		<globmapper from="${cfstatic.zipsubdir}/*" to="*"/>
    		</mapper>
    	</unzip>
	</target>

</project>